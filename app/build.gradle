/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
}

// apply from: 'https://raw.github.com/gretty-gradle-plugin/gretty/master/pluginScripts/gretty.plugin'

repositories {
    // Use MavenCentral for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // Use mockito for testing.
    implementation 'org.mockito:mockito-core:3.8.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    
    // Use postgreSQL for databasing.
    implementation 'org.postgresql:postgresql:42.2.19.jre7'

    // Use log4j API and Core for logging.
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'

}

application {
    // Define the main class for the application.
    mainClass = 'com.github.carlcidromero.project1.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

// gretty {
//     httpPort = 8888
//     contextPath = '/app'
// }